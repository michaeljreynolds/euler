/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/


let prev = 1;
let cur = 2;

function solve(limit) {
    let sum = 0;    
    while (cur < limit) {        
        if (isEven(cur)) {
            sum += cur;
        }
        cur = increment(cur);                    
    }
    return sum;
}

function isEven(num) {
    return num % 2 === 0;
}

function increment(num) {    
    let temp = num;
    num = num + prev;
    prev = temp;    
    return num;
}

function runTest(limit, expected) {
    reset();
    let result = solve(limit);
    let passed = result === expected;
    console.log(`Running test. Finding fib numbers below ${limit}. \n Expecting to get a sum of ${expected} for the even numbered fibs.`);
    console.log(`Passed ${passed}`);
}

function reset() {
    prev = 1;
    cur = 2;
}

runTest(10, 10);
runTest(50, 44);
runTest(4000000, 4613732);